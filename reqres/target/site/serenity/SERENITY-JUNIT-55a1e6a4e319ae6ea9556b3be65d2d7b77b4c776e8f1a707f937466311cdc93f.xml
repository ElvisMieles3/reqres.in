<?xml version="1.0" encoding="UTF-8"?><testsuite errors="1" failures="1" name="creacion cliente desde el servicio" skipped="0" tests="3" time="9.7" timestamp="2020-07-10 11:11:11"><testcase name="El Analista de Calidad verifica la respuesta del servicio de registrar cliente"><failure message="1 expectation failed.&#10;JSON path id doesn't match.&#10;Expected: is &quot;415&quot;&#10;  Actual: 794&#10;" type="java.lang.AssertionError">1 expectation failed.
JSON path id doesn't match.
Expected: is "415"
  Actual: 794
</failure><system-err>1 expectation failed.
JSON path id doesn't match.
Expected: is "415"
  Actual: 794
&#13;
co.certificacion.reqres.stepdefinitions.RegistrarStepDefinitions.elMensajeEnElCampo(RegistrarStepDefinitions.java:74)&#13;
âœ½.el mensaje '415' en el campo 'id'(src/test/resources/features/registrar.feature:16)&#13;
</system-err></testcase><testcase name="El Analista de Calidad verifica que el servicio permita elimimar el cliente"/><testcase name="El Analista de Calidad verifica la respuesta del servicio consultar Cliente por ID"><error message="Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: id." type="java.lang.IllegalArgumentException">Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: id.</error><system-err>Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: id.&#13;
io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1341)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:326)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1041)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:821)&#13;
io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)&#13;
io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1228)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:326)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1041)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:821)&#13;
io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)&#13;
io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:122)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:122)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:122)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:122)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:122)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:122)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1749)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:326)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1041)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:821)&#13;
io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)&#13;
io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1755)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:326)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1041)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:821)&#13;
io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)&#13;
io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:171)&#13;
net.serenitybdd.rest.decorators.request.RequestSpecificationDecorated.executeCall(RequestSpecificationDecorated.java:295)&#13;
net.serenitybdd.rest.decorators.request.RequestSpecificationDecorated.execute(RequestSpecificationDecorated.java:253)&#13;
net.serenitybdd.rest.decorators.request.RequestSpecificationDecorated.get(RequestSpecificationDecorated.java:52)&#13;
net.serenitybdd.rest.decorators.request.RequestSpecificationDecorated.get(RequestSpecificationDecorated.java:28)&#13;
co.certificacion.reqres.endpoints.ConsumirApi.tipoGetId(ConsumirApi.java:41)&#13;
co.certificacion.reqres.stepdefinitions.RegistrarStepDefinitions.elAnalistaRealizaLaConsultaDelServicioConElSiguienteID(RegistrarStepDefinitions.java:94)&#13;
cucumber.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:50)&#13;
cucumber.runner.TestStep.executeStep(TestStep.java:63)&#13;
cucumber.runner.TestStep.run(TestStep.java:49)&#13;
cucumber.runner.PickleStepTestStep.run(PickleStepTestStep.java:43)&#13;
cucumber.runner.TestCase.run(TestCase.java:44)&#13;
cucumber.runner.Runner.runPickle(Runner.java:40)&#13;
</system-err></testcase></testsuite>